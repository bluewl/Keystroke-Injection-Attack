from pynput import keyboard
from Quartz import CGEventCreateKeyboardEvent, CGEventPost, kCGHIDEventTap
import time
import random
import string

# Key codes for macOS arrow keys
LEFT_ARROW = 123
RIGHT_ARROW = 124

# Probability of injection on any alphanumeric key-press (0.1 == 10%)
PROBABILITY = 0.1

def human_delay():
    time.sleep(random.uniform(0.001, 0.03))
    
def inject_arrow_keys():
    # Press and release Left Arrow
    event_down_left  = CGEventCreateKeyboardEvent(None, LEFT_ARROW,  True)
    event_up_left    = CGEventCreateKeyboardEvent(None, LEFT_ARROW,  False)
    # Press and release Right Arrow
    event_down_right = CGEventCreateKeyboardEvent(None, RIGHT_ARROW, True)
    event_up_right   = CGEventCreateKeyboardEvent(None, RIGHT_ARROW, False)

    # dispatch events with small random delays
    human_delay()
    CGEventPost(kCGHIDEventTap, event_down_left)
    human_delay()
    CGEventPost(kCGHIDEventTap, event_down_right)
    human_delay()
    CGEventPost(kCGHIDEventTap, event_up_left)
    human_delay()
    CGEventPost(kCGHIDEventTap, event_up_right)

    print("← → injected")

def on_press(key):
    try:
        ch = key.char
    except AttributeError:
        # ignore special keys (shift, ctrl, etc.)
        return

    # only consider letters and digits
    if ch and ch in string.ascii_letters + string.digits:
        if random.random() < PROBABILITY:
            inject_arrow_keys()

if __name__ == "__main__":
    print(f"Listening for alphanumeric keys (injection chance: {PROBABILITY*100:.0f}%)…")
    with keyboard.Listener(on_press=on_press) as listener:
        listener.join()
