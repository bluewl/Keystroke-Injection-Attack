from pynput import keyboard
from Quartz import CGEventCreateKeyboardEvent, CGEventPost, kCGHIDEventTap
import time
import random
import string

# Key codes for macOS
KEY_SCROLL_LOCK = 107
KEY_NUM_LOCK    = 71

# 5% chance per key-press, per lock key
PROBABILITY = 0.05

def human_delay():
    time.sleep(random.uniform(0.001, 0.03))

def inject_key(key_code, name):
    print(f"Injecting {name}")
    down = CGEventCreateKeyboardEvent(None, key_code, True)
    up = CGEventCreateKeyboardEvent(None, key_code, False)
    human_delay()
    CGEventPost(kCGHIDEventTap, down)
    human_delay()
    CGEventPost(kCGHIDEventTap, up)
    # human_delay()
    # CGEventPost(kCGHIDEventTap, down)
    # human_delay()
    # CGEventPost(kCGHIDEventTap, up)
    print(f"Injected {name}")

def on_press(key):
    # .char may exist but be None, so use getattr
    ch = getattr(key, 'char', None)

    # ignore anything that isn't a single-character alphanumeric
    if not (isinstance(ch, str) and ch.isalnum()):
        return
    
    # roll the two dice
    if random.random() < PROBABILITY:
        inject_key(KEY_SCROLL_LOCK, "Scroll Lock")
    if random.random() < PROBABILITY:
        inject_key(KEY_NUM_LOCK, "Num Lock")

if __name__ == "__main__":
    print(f"Listening for alphanumeric keys (5% chance each for Scroll & Num Lock)â€¦")
    with keyboard.Listener(on_press=on_press) as listener:
        listener.join()
