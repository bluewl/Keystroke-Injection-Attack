import time
import random
from pynput import keyboard
from Quartz import CGEventCreateKeyboardEvent, CGEventPost, kCGHIDEventTap

# MIRROR KIA EXAMPLE
# Whenever left shift is pressed, right shift is injected. Same goes with release.

# Key code for Shift (macOS common)
SHIFT_KEY = 60

shift_pressed = False

def inject_shift_press():
    delay = random.uniform(0.03, 0.07)  # Delay between 30ms and 70ms
    time.sleep(delay)
    event = CGEventCreateKeyboardEvent(None, SHIFT_KEY, True)
    CGEventPost(kCGHIDEventTap, event)
    print(f"Injected Shift Press after {int(delay*1000)}ms delay")

def inject_shift_release():
    delay = random.uniform(0.03, 0.07)  # Similar delay on release
    time.sleep(delay)
    event = CGEventCreateKeyboardEvent(None, SHIFT_KEY, False)
    CGEventPost(kCGHIDEventTap, event)
    print(f"Injected Shift Release after {int(delay*1000)}ms delay")

def on_press(key):
    global shift_pressed
    try:
        if key == keyboard.Key.shift and not shift_pressed:
            shift_pressed = True
            inject_shift_press()
    except Exception as e:
        print(f"on_press error: {e}")

def on_release(key):
    global shift_pressed
    try:
        if key == keyboard.Key.shift and shift_pressed:
            shift_pressed = False
            inject_shift_release()
    except Exception as e:
        print(f"on_release error: {e}")

# Start the listener
with keyboard.Listener(on_press=on_press, on_release=on_release) as listener:
    print("Listening for Shift key events... Press Ctrl+C to exit.")
    listener.join()
