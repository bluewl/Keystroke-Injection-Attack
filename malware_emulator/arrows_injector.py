from pynput import keyboard
from Quartz import CGEventCreateKeyboardEvent, CGEventPost, kCGHIDEventTap
import time
import random

# POSITION-DEPENDENT KIA EXAMPLE
# When 'q' is pressed, inject Left and Right Arrow keys

# Key codes for macOS arrow keys
LEFT_ARROW = 123
RIGHT_ARROW = 124

def left_down_right_down_delay():
    time.sleep(random.uniform(0.03, 0.08))

def right_down_():
    time.sleep(random.uniform(0.00, 0.05))
    
def inject_arrow_keys():
    # Press and release Left Arrow
    event_down_left = CGEventCreateKeyboardEvent(None, LEFT_ARROW, True)
    event_up_left = CGEventCreateKeyboardEvent(None, LEFT_ARROW, False)

    # Press and release Right Arrow
    event_down_right = CGEventCreateKeyboardEvent(None, RIGHT_ARROW, True)
    event_up_right = CGEventCreateKeyboardEvent(None, RIGHT_ARROW, False)
    CGEventPost(kCGHIDEventTap, event_down_left)
    time.sleep(random.uniform(0.01, 0.05))
    CGEventPost(kCGHIDEventTap, event_down_right)
    time.sleep(random.uniform(0.01, 0.05))
    CGEventPost(kCGHIDEventTap, event_up_left)
    time.sleep(random.uniform(0.01, 0.05))
    CGEventPost(kCGHIDEventTap, event_up_right)

    print("‚Üê ‚Üí injected after 'q'")

# Listener callback
def on_press(key):
    try:
        if key.char == 'e':
            inject_arrow_keys()
    except AttributeError:
        pass  # Non-character keys (shift, etc.)

# Start the listener
with keyboard.Listener(on_press=on_press) as listener:
    print("üëª Listening for 'q' key...")
    listener.join()
