from pynput import keyboard
from Quartz import CGEventCreateKeyboardEvent, CGEventPost, kCGHIDEventTap
import time

# when left shift is pressed, inject a mirrored shift down event, when left shift is released, inject a mirrored shift up event
# NOTE: 136M uses keycode which means that they don't differentiate between left and right modifier keys.

# macOS Shift keycode (same for left/right)
KEY_SHIFT = 56

# Tracks the state of whether we've injected a mirrored shift
mirrored_shift_active = False

def inject_shift_down():
    event = CGEventCreateKeyboardEvent(None, KEY_SHIFT, True)
    CGEventPost(kCGHIDEventTap, event)
    print("‚¨áÔ∏è Injected mirrored Shift down")

def inject_shift_up():
    event = CGEventCreateKeyboardEvent(None, KEY_SHIFT, False)
    CGEventPost(kCGHIDEventTap, event)
    print("‚¨ÜÔ∏è Injected mirrored Shift up")

def on_press(key):
    global mirrored_shift_active
    if key == keyboard.Key.shift and not mirrored_shift_active:
        mirrored_shift_active = True
        inject_shift_down()

def on_release(key):
    global mirrored_shift_active
    if key == keyboard.Key.shift and mirrored_shift_active:
        inject_shift_up()
        mirrored_shift_active = False

# Start listener
with keyboard.Listener(on_press=on_press, on_release=on_release) as listener:
    print("üß™ Listening for Shift key ‚Äî mirroring Shift down/up. Press Ctrl+C to quit.")
    listener.join()
